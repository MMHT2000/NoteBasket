<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>